// <auto-generated />
using System;
using Emissor.Application.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Emissor.Infra.Migrations
{
    [DbContext(typeof(PgContext))]
    [Migration("20231227141638_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "tipo_unidades", new[] { "unidade", "metro", "kilo", "litro" });
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Emissor.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bairro");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("documento");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("endereco");

                    b.Property<int>("EnderecoNumero")
                        .HasColumnType("integer")
                        .HasColumnName("endereco_numero");

                    b.Property<bool>("IsPJ")
                        .HasColumnType("boolean")
                        .HasColumnName("is_pj");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("municipio");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("Documento")
                        .IsUnique();

                    b.ToTable("clientes", "clientes");
                });

            modelBuilder.Entity("Emissor.Domain.Entities.Mercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("CodigoBarra")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)")
                        .HasColumnName("codigo_barra");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("descricao");

                    b.Property<double>("Preco")
                        .HasColumnType("DECIMAL(8,2)")
                        .HasColumnName("preco");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("referencia");

                    b.Property<int>("Unidade")
                        .HasColumnType("tipo_unidades")
                        .HasColumnName("unidade");

                    b.HasKey("Id");

                    b.HasIndex("Referencia")
                        .IsUnique();

                    b.ToTable("mercadorias", "estoque");
                });

            modelBuilder.Entity("Emissor.Domain.Entities.OrdemServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("AtendenteId")
                        .HasColumnType("uuid")
                        .HasColumnName("atendente_id");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uuid")
                        .HasColumnName("cliente_id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<DateTime?>("DtFim")
                        .HasColumnType("TIMESTAMPTZ")
                        .HasColumnName("dt_fim");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("TIMESTAMPTZ")
                        .HasColumnName("dt_inicio");

                    b.Property<long>("Numero")
                        .HasColumnType("SERIAL NOT NULL")
                        .HasColumnName("numero");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text")
                        .HasColumnName("observacoes");

                    b.Property<double>("ValorFinal")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("valor_final");

                    b.Property<double>("ValorHora")
                        .HasColumnType("DECIMAL(8,2)")
                        .HasColumnName("valor_hora");

                    b.HasKey("Id");

                    b.ToTable("ordens_servico", "ordens_servico");
                });

            modelBuilder.Entity("Emissor.Domain.Entities.OrdemServicoMercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("OrdemServicoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ordem_servico_id");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("produto_id");

                    b.Property<double>("Quantidade")
                        .HasColumnType("DECIMAL(7,2)")
                        .HasColumnName("quantidade");

                    b.HasKey("Id");

                    b.HasIndex("OrdemServicoId");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("ordens_servico_mercadoias", "ordens_servico");
                });

            modelBuilder.Entity("Emissor.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("nome");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("nome_usuario");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(72)
                        .HasColumnType("character varying(72)")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.HasIndex("NomeUsuario")
                        .IsUnique();

                    b.ToTable("usuarios", "usuarios");
                });

            modelBuilder.Entity("Emissor.Domain.Entities.OrdemServicoMercadoria", b =>
                {
                    b.HasOne("Emissor.Domain.Entities.OrdemServico", "OrdemServico")
                        .WithMany("OrdemServicoMercadorias")
                        .HasForeignKey("OrdemServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emissor.Domain.Entities.Mercadoria", "Produto")
                        .WithOne("OrdemServicoMercadoria")
                        .HasForeignKey("Emissor.Domain.Entities.OrdemServicoMercadoria", "ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemServico");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Emissor.Domain.Entities.Mercadoria", b =>
                {
                    b.Navigation("OrdemServicoMercadoria");
                });

            modelBuilder.Entity("Emissor.Domain.Entities.OrdemServico", b =>
                {
                    b.Navigation("OrdemServicoMercadorias");
                });
#pragma warning restore 612, 618
        }
    }
}
